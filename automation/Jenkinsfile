pipeline {
  agent {
    label 'docker-agent'
  }
  options {
    ansiColor('xterm')
  }

  environment {
    /*---AWS ECR Credentials---*/
    REGISTRY = '677688576531.dkr.ecr.eu-west-3.amazonaws.com'
    REGISTRY_CREDENTIAL = 'aws-jenkins'
    ECR_REPOSITORY = 'infinite'
    ECR_REGION = 'eu-west-3'

    /*---Docker Build configuration---*/
    VERSION = 'latest'
    DOCKERFILE_PATH = './application/'

    /*---AWS S3 bucket details---*/
    BUCKET_NAME = 'web-host-bucket-infinite'
  }

  stages {
    stage('Source'){
      steps {
        git branch: 'development',
            credentialsId: 'github',
            url: 'git@github.com:andrasKelle/infinite-lambda-devops-test.git'
      }
    }

    stage('Build') {
      steps {
        sh """
          ls
          docker info
          docker build -t ${ECR_REPOSITORY}:${BUILD_NUMBER} .
          docker tag ${ECR_REPOSITORY}:${BUILD_NUMBER} ${REGISTRY}/${ECR_REPOSITORY}:${VERSION}
          docker images
        """

        sh "echo \033[33m Deploy ${ECR_REPOSITORY}:${BUILD_NUMBER} to AWS ECR \033[0m"
        script {
          docker.withRegistry("https://${REGISTRY}", "ecr:${ECR_REGION}:${REGISTRY_CREDENTIAL}") {
              docker.image("${REGISTRY}/${ECR_REPOSITORY}").push("${VERSION}")
          }
        }
      }
    }

    stage('Deploy') {
      steps {
        sh 'echo \033[33m Pushing files to S3 bucket... \033[0m'
        
      }
    }
  }

  post {
    success {
      sh "echo \033[32m Successfully builded ${ECR_REPOSITORY}:${BUILD_NUMBER} image and pushed to ECR repository. \033[0m"
    }
    failure {
      sh 'echo \033[31m Failed \033[0m'
    }
  }
}